buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven/' }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = '2.1.0'
group = 'me.oondanomala.BarrierVisibility'
archivesBaseName = 'BarrierVisibility'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    mappings = 'stable_22'
    runDir = 'run'
    makeObfSourceJar = false
    clientRunArgs.addAll('--tweakClass', 'org.spongepowered.asm.launch.MixinTweaker', '--mixin', 'mixins.barrierVisibility.json')
}

configurations {
    shade
    compile.extendsFrom(shade)
}

dependencies {
    annotationProcessor 'org.spongepowered:mixin:0.7.11-SNAPSHOT'
    shade('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version,
                'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Fix resources when in dev environment
tasks.register('moveResources') {
    dependsOn processResources
    doLast {
        ant.move file: "${buildDir}/resources/main", todir: "${buildDir}/classes/java"
    }
}
tasks.classes.dependsOn moveResources

jar {
    manifest.attributes(
            'FMLCorePluginContainsFMLMod': true,
            'ForceLoadAsMod': true,
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'mixins.barrierVisibility.json',
            'FMLCorePlugin': 'me.oondanomala.barriervisibility.mixins.MixinLoader'
    )
}

mixin {
    add sourceSets.main, "mixins.barrierVisibility.refmap.json"
}

shadowJar {
    configurations = [project.configurations.shade]
    classifier ''
    exclude 'LICENSE.txt'
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}
reobf { shadowJar {} }
